@use '@/styles/Helpers' as *;
.GSDK {
  .react-aria-RadioGroup {
    display: flex;
    flex-direction: column;
    gap: 8px;
    color: var(--g-radio-labelColor);

    .react-aria-FieldError {
      font-size: 12px;
      color: var(--g-radio-errorLabelColor);
    }

    [slot='description'] {
      @include description;
    }

    &[data-orientation='horizontal'] {
      flex-direction: row;
      align-items: center;
    }
  }

  .react-aria-Radio {
    display: flex;
    align-items: center;
    gap: 0.571rem;
    font-size: 1.143rem;
    color: var(--g-radio-labelColor);
    forced-color-adjust: none;

    &:before {
      content: '';
      display: block;
      width: 1.5rem;
      height: 1.5rem;
      box-sizing: border-box;
      border: 0.125rem solid var(--g-radio-borderColor);
      border-radius: 9999px;
      transition: all 200ms;
    }

    &[data-hovered]:before {
      border-color: var(--g-radio-hoveredBorderColor);
    }

    &[data-pressed]:before {
      border-color: var(--g-radio-pressedBorderColor);
    }

    &[data-selected] {
      &:before {
        border-color: var(--g-radio-selectedBorderColor);
        border-width: 0.475rem;
      }
    }

    &[data-focus-visible]:before {
      outline: var(--g-focus-borderWidth) solid var(--g-radio-focusRingColor);
      outline-offset: 2px;
    }

    &[data-invalid] {
      &:before {
        border-color: var(--g-radio-errorLabelColor);
      }

      &[data-pressed]:before {
        border-color: var(--g-radio-errorBorderColor);
      }
    }

    &[data-disabled] {
      color: var(--g-radio-disabledLabelColor);

      &:before {
        border-color: var(--g-radio-disabledBorderColor);
      }
    }
  }
}
