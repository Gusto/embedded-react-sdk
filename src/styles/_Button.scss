.GSDK {
  .react-aria-Button {
    --button-color: var(--g-button-primary-color);
    --button-bg: var(--g-button-primary-bg);
    --button-border-color: var(--g-button-primary-borderColor);
    --button-hover-bg: var(--g-button-primary-hoverBg);
    --button-hover-color: var(--g-button-primary-hoverColor);
    --button-disabled-bg: var(--g-button-primary-disabledBg);
    --button-focus-color: var(--g-button-primary-focusColor);

    position: relative;
    border: none;
    color: var(--button-color);
    background: var(--button-bg);
    border-radius: var(--g-spacing-radius);
    vertical-align: middle;
    font-size: var(--g-button-fontSize);
    font-weight: var(--g-button-fontWeight);
    line-height: toRem(24);
    letter-spacing: 0.32px;
    text-align: center;
    margin: 0;
    outline: none;
    padding: var(--g-button-paddingY) var(--g-button-paddingX);
    text-decoration: none;
    cursor: pointer;

    &[data-variant='link'] {
      --button-color: var(--g-button-primary-bg);
      --button-bg: transparent;
      --button-hover-bg: transparent;
      --button-hover-color: var(--g-button-primary-hoverBg);
      --button-disabled-bg: disabled;
      --button-focus-color: var(--g-button-primary-hoverBg);
      padding: 0;
      text-decoration: underline;
    }
    &[data-variant='secondary'] {
      --button-color: var(--g-button-secondary-color);
      --button-bg: var(--g-button-secondary-bg);
      --button-border-color: var(--g-button-secondary-borderColor);
      --button-hover-bg: var(--g-button-secondary-hoverBg);
      --button-hover-color: var(--g-button-secondary-hoverColor);
      --button-disabled-bg: var(--g-button-secondary-disabledBg);
      --button-focus-color: var(--g-button-secondary-focusColor);
      border: var(--g-button-borderWidth) solid var(--button-border-color);
      box-shadow: var(--g-button-secondary-shadow);
      // Adjusting for border to ensure same height of the component
      padding: calc(var(--g-button-paddingY) - var(--g-button-borderWidth))
        calc(var(--g-button-paddingX) - var(--g-button-borderWidth));
    }
    &[data-variant='tertiary'],
    &[data-variant='icon'] {
      --button-color: var(--g-button-tertiary-color);
      --button-bg: var(--g-button-tertiary-bg);
      --button-border-color: var(--g-button-tertiary-borderColor);
      --button-hover-bg: var(--g-button-tertiary-hoverBg);
      --button-hover-color: var(--g-button-tertiary-hoverColor);
      --button-disabled-bg: var(--g-button-tertiary-disabledBg);
      --button-focus-color: var(--g-button-tertiary-focusColor);
      text-decoration: underline;
    }
    &[data-variant='icon'] {
      border-radius: 50%;
      padding: toRem(12);
      line-height: 0;
    }
    // Note: Error state is not currently customizable by partners - to be decided if this is required
    &[data-error] {
      &[data-variant='primary'] {
        --button-color: var(--g-colors-primary-100);
        --button-bg: var(--g-colors-error-500);
        --button-border-color: transparent;
        --button-hover-bg: var(--g-colors-error-800);
        --button-hover-color: var(--g-colors-primary-200);
        --button-disabled-bg: var(--g-colors-error-500);
        --button-focus-color: var(--g-colors-error-500);
      }
      &[data-variant='link'] {
        --button-color: var(--g-colors-error-500);
        --button-focus-color: var(--g-colors-error-500);
      }
      &[data-variant='secondary'],
      &[data-variant='tertiary'] {
        --button-color: var(--g-colors-error-500);
        --button-bg: var(--g-colors-primary-100);
        --button-border-color: var(--g-colors-error-500);
        --button-hover-bg: var(--g-colors-error-100);
        --button-hover-color: var(--g-colors-error-800);
        --button-disabled-bg: var(--g-colors-primary-100);
        --button-focus-color: var(--g-colors-error-500);
      }
    }
    &[data-loading='true'] {
      color: transparent !important; //hide text
      &::after {
        content: '';
        position: absolute;
        width: toRem(24);
        height: toRem(24);
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        margin: auto;
        mask: url('@/assets/icons/spinner_small.svg') no-repeat 50% 50%;
        background-color: var(--button-color);
        animation: button-loading-spinner 1s ease infinite;
      }
    }

    &[data-hovered],
    &[data-pressed] {
      background: var(--button-hover-bg);
      color: var(--button-hover-color);
    }

    &[data-focus-visible] {
      outline: var(--g-focus-borderWidth) solid var(--button-focus-color);
      outline-offset: 2px;
    }

    &[data-disabled] {
      opacity: 0.5;
      background: var(--button-disabled-bg);
      cursor: not-allowed;
    }
  }
  @keyframes button-loading-spinner {
    from {
      transform: rotate(0turn);
    }

    to {
      transform: rotate(1turn);
    }
  }
}
