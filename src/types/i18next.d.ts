// This file is autogenerated        
import 'i18next';

declare module 'i18next' {
    export interface CompanyAddBank{
"title":string;
"intro":string;
"entry_selection_question":string;
"manual_entry":string;
"plaid_entry":string;
"routing_number_label":string;
"account_number_label":string;
"account_type_label":string;
"account_type_checking":string;
"account_type_savings":string;
"submit":string;
};
export interface CompanyAddresses{
"title":string;
"description":string;
"mailingLabel":string;
"filingLabel":string;
"editCta":string;
"addCta":string;
"continueCta":string;
};
export interface CompanyAssignSignatory{
"title":string;
"description":string;
"signingOptions":{
"label":string;
"selfSign":string;
"appointOther":string;
};
"signatoryDetails":{
"title":string;
"description":string;
"firstName":string;
"lastName":string;
"email":string;
"phone":string;
"ssn":string;
"birthday":string;
"titleSelect":{
"label":string;
};
};
"address":{
"title":string;
"description":string;
"street1":string;
"street2":string;
"city":string;
"state":string;
"statePlaceholder":string;
"zip":string;
};
"inviteSignatory":{
"title":string;
"description":string;
"signatoryEmail":string;
"confirmEmail":string;
"firstName":string;
"lastName":string;
};
"buttons":{
"signDocuments":string;
"inviteSignatory":string;
};
"validations":{
"dob":string;
"email":string;
"emailMismatch":string;
"firstName":string;
"lastName":string;
"phone":string;
"title":string;
"address":{
"street1":string;
"city":string;
"state":string;
"zip":string;
};
};
};
export interface CompanyBankAccount{
"addBankAccountTitle":string;
"addBankAccountDescription":string;
"routingNumberLabel":string;
"accountNumberLabel":string;
"verificationAlert":{
"awaiting_deposits":{
"label":string;
"description":string;
};
"ready_for_verification":{
"label":string;
"description":string;
};
"verified":{
"label":string;
};
};
"continueCta":string;
"changeBankAccountCta":string;
"verifyBankAccountCta":string;
"cancelCta":string;
"form":{
"routingNumberLabel":string;
"routingNumberDescription":string;
"accountNumberLabel":string;
};
"validations":{
"routingNumber":string;
"accountNumber":string;
"deposit1":string;
"deposit2":string;
};
"verifyBankAccountTitle":string;
"verifyBankAccountDescription":string;
"deposit1Label":string;
"deposit1Description":string;
"deposit2Label":string;
"deposit2Description":string;
"verifyCta":string;
};
export interface CompanyDocumentList{
"documentListTitle":string;
"documentListLabel":string;
"formColumnLabel":string;
"actionColumnLabel":string;
"selfSignatoryTitle":string;
"otherSignatoryTitle":string;
"selfSignatorySubtext":string;
"otherSignatorySubtext":string;
"noSignatorySubtext":string;
"changeSignatoryCta":string;
"assignSignatoryCta":string;
"signDocumentCta":string;
"signDocumentComplete":string;
"notSigned":string;
"documentListError":string;
"emptyTableTitle":string;
"continueCta":string;
};
export interface CompanyFederalTaxes{
"pageTitle":string;
"entity_type_and_legal_name_intro":string;
"federal_ein_label":string;
"federal_ein_description":string;
"taxpayer_type_label":string;
"taxpayer_type_description":string;
"federal_filing_form_label":string;
"federal_filing_form_description":string;
"legal_entity_name_label":string;
"legal_entity_name_description":string;
"legal_entity_name_error":string;
"taxPayerType":{
"C-Corporation":string;
"S-Corporation":string;
"Sole proprietor":string;
"LLC":string;
"LLP":string;
"Limited partnership":string;
"Co-ownership":string;
"Association":string;
"Trusteeship":string;
"General partnership":string;
"Joint venture":string;
"Non-Profit":string;
};
"filingForm":{
"941":string;
"944":string;
};
"continueCta":string;
};
export interface CompanyIndustry{
"title":string;
"description":string;
"label":string;
"placeholder":string;
"submitCta":string;
};
export interface CompanyLocations{
"locationsListTitle":string;
"locationsListDescription":string;
"locationListLabel":string;
"locationListCol1":string;
"locationListCol2":string;
"filingAddress":string;
"mailingAddress":string;
"hamburgerTitle":string;
"editCta":string;
"emptyTableTitle":string;
"emptyTableDescription":string;
"addLocationCta":string;
"addFirstLocationCta":string;
"locationFormTitle":string;
"locationFormDescription":string;
"street1Label":string;
"street2Label":string;
"cityLabel":string;
"stateLabel":string;
"statePlaceholder":string;
"zipLabel":string;
"phoneNumberLabel":string;
"addressTypeLabel":string;
"mailingAddressLabel":string;
"mailingAddressDescription":string;
"filingAddressLabel":string;
"filingAddressDescription":string;
"saveCta":string;
"cancelCta":string;
"continueCta":string;
"validations":{
"street1":string;
"city":string;
"state":string;
"zip":string;
"phone":string;
};
};
export interface CompanyOnboardingOverview{
"onboardingCompletedTitle":string;
"onboardingCompletedDescription":string;
"onboardingCompletedCta":string;
"missingRequirementsTitle":string;
"missingRequirementsDescription":string;
"initialSetupTitle":string;
"initialSetupDescription":string;
"missingRequirementsCta":string;
"initialSetupCta":string;
"stepTitles":{
"add_addresses":string;
"federal_tax_setup":string;
"select_industry":string;
"add_bank_info":string;
"add_employees":string;
"state_setup":string;
"payroll_schedule":string;
"sign_all_forms":string;
"verify_bank_info":string;
"external_payroll":string;
};
"stepDescriptions":{
"add_addresses":string;
"federal_tax_setup":string;
"select_industry":string;
"add_bank_info":string;
"add_employees":string;
"state_setup":string;
"payroll_schedule":string;
"sign_all_forms":string;
"verify_bank_info":string;
"external_payroll":string;
};
};
export interface CompanyPaySchedule{
"listDescription":string;
"listDescription2":string;
"addAnotherPayScheduleCta":string;
"saveAndContinueCta":string;
"continueCta":string;
"pleaseVerify":string;
"payScheduleList":{
"name":string;
"actions":string;
"active":string;
"inactive":string;
"edit":string;
};
"headings":{
"addPaySchedule":string;
"editPaySchedule":string;
"pageTitle":string;
};
"labels":{
"payfrequency":string;
"frequency":string;
"deadline":string;
"frequencyOptions":string;
"firstPayDate":string;
"firstPayPeriodEndDate":string;
"firstPayDayOfTheMonth":string;
"lastPayDayOfTheMonth":string;
"preview":string;
"legend":string;
};
"loading":string;
"descriptions":{
"frequencyOptionsDescription":string;
"anchorPayDateDescription":string;
"anchorEndOfPayPeriodDescription":string;
};
"payPreview":{
"payPeriod":string;
"payday":string;
"payrollDeadline":string;
};
"actions":{
"cancel":string;
"save":string;
};
"frequencies":{
"everyWeek":string;
"everyOtherWeek":string;
"twicePerMonth":string;
"monthly":string;
};
"frequencyOptions":{
"15thAndLast":string;
"custom":string;
};
"previewAlert":{
"title":string;
"description":string;
};
};
export interface CompanySignatureForm{
"signatureFormTitle":string;
"downloadInstructions":string;
"viewDocumentCta":string;
"signatureLabel":string;
"signatureDescription":string;
"signatureError":string;
"confirmationLabel":string;
"confirmationError":string;
"backCta":string;
"submitCta":string;
"downloadPrompt":string;
};
export interface CompanyStateTaxes{
"list":{
"selfOnboardingWarningLabel":string;
"selfOnboardingWarningDescription":string;
"continueCta":string;
"editStateTaxCta":string;
"continueStateTaxSetupCta":string;
"requirementsListCol1":string;
"requirementsListCol2":string;
"completeBadge":string;
"incompleteBadge":string;
"requirementsListLabel":string;
"emptyTableTitle":string;
"emptyTableDescription":string;
};
"form":{
"saveCta":string;
"cancelCta":string;
"title":string;
"effectiveFromLabel":string;
"validations":{
"minValue":string;
"maxValue":string;
"oneOf":string;
"required":string;
};
};
};
export interface ContractorAddress{
"businessAddressTitle":string;
"businessAddressDescription":string;
"homeAddressTitle":string;
"homeAddressDescription":string;
"street1":string;
"street2":string;
"city":string;
"state":string;
"statePlaceholder":string;
"zip":string;
"submit":string;
"validations":{
"street1":string;
"city":string;
"state":string;
"zip":string;
};
};
export interface ContractorContractorList{
"addContractorCTA":string;
"addAnotherCTA":string;
"contractorListLabel":string;
"editCTA":string;
"deleteCTA":string;
"emptyTableDescription":string;
"emptyTableTitle":string;
"listHeaders":{
"name":string;
"status":string;
};
"title":string;
"continueCta":string;
"progressBarCta":string;
};
export interface ContractorNewHireReport{
"title":string;
"description":string;
"doFileLegend":string;
"yesOption":string;
"noOption":string;
"stateSelectionLabel":string;
"submitCta":string;
"validations":{
"state":string;
};
};
export interface ContractorPaymentMethod{
"title":string;
"paymentFieldsetLegend":string;
"directDepositLabel":string;
"directDepositDescription":string;
"checkLabel":string;
"checkDescription":string;
"continueCta":string;
"bankAccountForm":{
"nameLabel":string;
"routingNumberLabel":string;
"routingNumberDescription":string;
"accountNumberLabel":string;
"accountTypeLabel":string;
"accountTypeChecking":string;
"accountTypeSavings":string;
"validations":{
"accountName":string;
"routingNumber":string;
"accountNumber":string;
};
};
};
export interface ContractorProfile{
"title":string;
"subtitle":string;
"fields":{
"selfOnboarding":{
"label":string;
"description":string;
};
"email":{
"label":string;
};
"contractorType":{
"label":string;
};
"firstName":{
"label":string;
};
"lastName":{
"label":string;
};
"middleInitial":{
"label":string;
};
"ssn":{
"label":string;
};
"businessName":{
"label":string;
};
"startDate":{
"label":string;
"description":string;
};
"wageType":{
"label":string;
};
"hourlyRate":{
"label":string;
};
"ein":{
"label":string;
};
};
"validations":{
"email":string;
"firstName":string;
"lastName":string;
"ssn":string;
"ssnFormat":string;
"businessName":string;
"ein":string;
"einFormat":string;
"hourlyRate":string;
};
"buttons":{
"cancel":string;
"create":string;
"update":string;
"creating":string;
"updating":string;
};
};
export interface ContractorSubmit{
"doneTitle":string;
"doneText":string;
"doneCTA":string;
"submitCTA":string;
"title":string;
"warningItems":{
"0":string;
"1":string;
"2":string;
};
"inviteContractor":{
"title":string;
"description":string;
"startDateLabel":string;
"inviteCta":string;
"successMessage":string;
};
"submitDone":{
"successMessage":string;
};
};
export interface EmployeeBankAccount{
"accountNumberLabel":string;
"accountTypeChecking":string;
"accountTypeLabel":string;
"accountTypeSavings":string;
"accountTypeSelect":string;
"cancelCta":string;
"checkImageAlt":string;
"description":string;
"nameLabel":string;
"routingNumberLabel":string;
"routingNumberDescription":string;
"submitCta":string;
"title":string;
"validations":{
"accountType":string;
};
};
export interface EmployeeCompensation{
"addAnotherJobCta":string;
"adjustForMinimumWage":string;
"adjustForMinimumWageDescription":string;
"minimumWageLabel":string;
"minimumWageDescription":string;
"allCompensations":{
"amountColumn":string;
"deleteCta":string;
"editCta":string;
"jobColumn":string;
"perColumn":string;
"tableLabel":string;
"typeColumn":string;
};
"amount":string;
"backCta":string;
"cancelCta":string;
"cancelNewJobCta":string;
"classificationCTA":string;
"employeeClassification":string;
"flsaStatusLabels":{
"Commission Only Exempt":string;
"Commission Only Nonexempt":string;
"Exempt":string;
"Nonexempt":string;
"Owner":string;
"Salaried Nonexempt":string;
};
"hamburgerTitle":string;
"jobTitle":string;
"paymentUnitDescription":string;
"paymentUnitLabel":string;
"paymentUnitOptions":{
"Hour":string;
"Month":string;
"Paycheck":string;
"Week":string;
"Year":string;
};
"saveNewJobCta":string;
"submitCta":string;
"title":string;
"editTitle":string;
"addTitle":string;
"validations":{
"classificationChangeNotification":string;
"exemptThreshold":string;
"paymentUnit":string;
"rate":string;
"nonZeroRate":string;
"rateExemptThreshold":string;
"title":string;
"minimumWage":string;
"stateWcClassCode":string;
};
"stateWcCoveredLabel":string;
"stateWcCoveredDescription":string;
"stateWcCoveredOptions":{
"yes":string;
"no":string;
};
"stateWcClassCodeLabel":string;
"stateWcClassCodeDescription":string;
"twoPercentStakeholderLabel":string;
};
export interface EmployeeDeductions{
"pageTitle":string;
"includeDeductionsFormLabel":string;
"includeDeductionsDescription":string;
"includeDeductionsDescriptionV2":string;
"includeDeductionsSubtitle":string;
"includeDeductionsEmptyState":string;
"includeDeductionsYes":string;
"includeDeductionsNo":string;
"continueCta":string;
"addDeductionTitle":string;
"addDeductionButtonCta":string;
"editDeductionTitle":string;
"descriptionLabel":string;
"frequencyLabel":string;
"frequencyRecurringOption":string;
"frequencyOneTimeOption":string;
"deductionsTableLabel":string;
"deductionTypeLabel":string;
"deductionTypePercentageOption":string;
"deductionTypeFixedAmountOption":string;
"deductionAmountLabel":string;
"annualMaxLabel":string;
"courtOrderedLabel":string;
"nameColumn":string;
"frequencyColumn":string;
"withheldColumn":string;
"actionsColumn":string;
"recurringText":string;
"recurringAmount":string;
"nonRecurringText":string;
"emptyListMessage":string;
"hamburgerTitle":string;
"editCta":string;
"deleteCta":string;
"addDeductionCta":string;
"cancelCta":string;
"validations":{
"description":string;
"amount":string;
};
};
export interface EmployeeDocumentSigner{
"documentListTitle":string;
"documentListLabel":string;
"formColumnLabel":string;
"actionColumnLabel":string;
"continueCta":string;
"signDocumentCta":string;
"signDocumentComplete":string;
"notSigned":string;
"documentListError":string;
"emptyTableTitle":string;
"signatureFormTitle":string;
"downloadPrompt":string;
"signatureFieldLabel":string;
"signatureFieldDescription":string;
"signatureFieldError":string;
"confirmSignatureCheckboxLabel":string;
"confirmSignatureError":string;
"backCta":string;
"signFormCta":string;
"viewDocumentCta":string;
"downloadAndReviewInstructions":string;
};
export interface EmployeeEmployeeList{
"actionLabel":string;
"addEmployeeCTA":string;
"skipCta":string;
"addAnotherCta":string;
"continueCta":string;
"addressesCta":string;
"deductionsCta":string;
"deleteCta":string;
"editCta":string;
"cancelSelfOnboardingCta":string;
"reviewCta":string;
"employeeListLabel":string;
"emptyTableDescription":string;
"emptyTableTitle":string;
"federalTaxesCta":string;
"hamburgerTitle":string;
"nameLabel":string;
"statusLabel":string;
"title":string;
};
export interface EmployeeFederalTaxes{
"deductions":string;
"dependentsTotalIfApplicable":string;
"extraWithholding":string;
"federalFilingStatus1c":string;
"federalFillingStatusPlaceholder":string;
"federalTaxesTitle":string;
"irs_calculator":string;
"filingStatusExemptFromWithholding":string;
"filingStatusHeadOfHousehold":string;
"filingStatusMarried":string;
"filingStatusSingle":string;
"fieldIsRequired":string;
"includesSpouseExplanation":string;
"multipleJobs2c":string;
"otherIncome":string;
"selectWithholdingDescription":string;
"submitCta":string;
"twoJobYesLabel":string;
"twoJobNoLabel":string;
"validations":{
"federalFilingStatus":string;
"federalTwoJobs":string;
};
};
export interface EmployeeHomeAddress{
"formTitle":string;
"desc":string;
"street1":string;
"street2":string;
"city":string;
"state":string;
"statePlaceholder":string;
"zip":string;
"courtesyWithholdingLabel":string;
"courtesyWhithholdingDescription":string;
"learnMoreCta":string;
"withholdingTitle":string;
"withholdingNote":string;
"editAddress":string;
"cancel":string;
"submit":string;
"validations":{
"street1":string;
"city":string;
"state":string;
"zip":string;
};
};
export interface EmployeeLanding{
"landingSubtitle":string;
"landingDescription":string;
"stepsSubtitle":string;
"steps":{
"personalInfo":string;
"taxInfo":string;
"bankInfo":string;
};
"getStartedCta":string;
"getStartedDescription":string;
};
export interface EmployeeOnboardingSummary{
"subTitle":string;
"description":string;
"onboardedAdminSubtitle":string;
"onboardedAdminDescription":string;
"onboardedSelfSubtitle":string;
"onboardedSelfDescription":string;
"doneCta":string;
"newHireReportCta":string;
"missingRequirementsSubtitle":string;
"missingRequirementsDescription":string;
"steps":{
"personal_details":string;
"compensation_details":string;
"add_work_address":string;
"add_home_address":string;
"federal_tax_setup":string;
"state_tax_setup":string;
"direct_deposit_setup":string;
"employee_form_signing":string;
"file_new_hire_report":string;
"admin_review":string;
};
"stepsDescriptions":{
"personal_details":string;
"compensation_details":string;
"add_work_address":string;
"add_home_address":string;
"federal_tax_setup":string;
"state_tax_setup":string;
"direct_deposit_setup":string;
"employee_form_signing":string;
"file_new_hire_report":string;
"admin_review":string;
};
};
export interface EmployeePaySchedules{
"pageTitle":string;
"saveAndContinueCta":string;
"pleaseVerify":string;
"labels":{
"frequency":string;
"firstPayDate":string;
"deadline":string;
};
};
export interface EmployeePaymentMethod{
"accountNumberLabel":string;
"accountTypeColumn":string;
"accountTypeLabel":string;
"accountTypeChecking":string;
"accountTypeSavings":string;
"allocationColumn":string;
"actionColumn":string;
"addAnotherCta":string;
"addBankAccountCTA":string;
"bankAccountsListLabel":string;
"cancelCta":string;
"saveCta":string;
"cancelAddCta":string;
"checkDescription":string;
"checkLabel":string;
"deleteBankAccountCTA":string;
"directDepositDescription":string;
"directDepositLabel":string;
"hamburgerTitle":string;
"nameLabel":string;
"nicknameColumn":string;
"paymentFieldsetLegend":string;
"routingNumberColumn":string;
"routingNumberLabel":string;
"routingNumberDescription":string;
"splitCta":string;
"submitCta":string;
"title":string;
"amountLabel":string;
"splitDescription":string;
"draggableListLabel":string;
"percentageLabel":string;
"splitAmountLabel":string;
"splitByLabel":string;
"priorityLabel":string;
"remainderLabel":string;
"splitTitle":string;
"priority_one":string;
"priority_two":string;
"priority_few":string;
"priority_other":string;
"validations":{
"percentageError":string;
"percentageErrorWithTotal":string;
"amountError":string;
"accountName":string;
"routingNumber":string;
"accountNumber":string;
};
};
export interface EmployeeProfile{
"cancelCta":string;
"description":string;
"dobLabel":string;
"email":string;
"emailDescription":string;
"firstName":string;
"formTitle":string;
"lastName":string;
"middleInitial":string;
"preferredFirstName":string;
"selfOnboardingLabel":string;
"ssnLabel":string;
"ssnMask":string;
"startDateDescription":string;
"startDateLabel":string;
"submitCta":string;
"title":string;
"validations":{
"email":string;
"firstName":string;
"lastName":string;
"startDate":string;
"startDateOutOfRange":string;
};
"workAddress":string;
"workAddressDescription":string;
"workAddressPlaceholder":string;
"workAddressSectionTitle":string;
"workAddressSectionDescription":string;
};
export interface EmployeeSplitPaycheck{
"amountLabel":string;
"bankDescription":string;
"description":string;
"percentageLabel":string;
"splitAmountLabel":string;
"splitByLabel":string;
"priorityLabel":string;
"title":string;
"remainderLabel":string;
"priority_one":string;
"priority_two":string;
"priority_few":string;
"priority_other":string;
"validations":{
"percentageError":string;
"priorityError":string;
"amountError":string;
};
"cancelCta":string;
"submitCta":string;
};
export interface EmployeeStateTaxes{
"stateTaxesTitle":string;
"submitCta":string;
};
export interface EmployeeTaxes{
"cancelCta":string;
"deductions":string;
"dependentsTotalIfApplicable":string;
"extraWithholding":string;
"federalFilingStatus1c":string;
"federalFillingStatusPlaceholder":string;
"federalTaxesTitle":string;
"filingStatusExemptFromWithholding":string;
"filingStatusHeadOfHousehold":string;
"filingStatusMarried":string;
"filingStatusSingle":string;
"fieldIsRequired":string;
"includesSpouseExplanation":string;
"irs_calculator":string;
"irsCalculatorOrW4Line":string;
"multipleJobs2c":string;
"otherIncome":string;
"selectWithholdingDescription":string;
"stateTaxesTitle":string;
"submitCta":string;
"twoJobYesLabel":string;
"twoJobNoLabel":string;
"validations":{
"federalFilingStatus":string;
"federalTwoJobs":string;
};
};
export interface PayrollPayrollConfiguration{
"pageTitle":string;
"regularPayroll":string;
"calculatePayroll":string;
"calculatePayrollTitle":string;
"hoursAndEarningsTitle":string;
"hoursAndEarningsDescription":string;
"employeeCompensationsTitle":string;
"tableColumns":{
"employees":string;
"hours":string;
"timeOff":string;
"additionalEarnings":string;
"reimbursements":string;
"totalPay":string;
};
"skippedBadge":string;
"editMenu":{
"edit":string;
};
"backButton":string;
"backButtonTitle":string;
"alerts":{
"payrollDeadline":{
"label":string;
"message":string;
};
"skippedEmployees":{
"label":string;
"employeeAddressNotVerified":string;
};
"employeeUpdated":{
"label":string;
};
};
};
export interface PayrollPayrollEditEmployee{
"pageTitle":string;
"grossPayLabel":string;
"regularHoursTitle":string;
"hoursUnit":string;
"saveButton":string;
"cancelButton":string;
"compensationNames":{
"regularHours":string;
"overtime":string;
"doubleOvertime":string;
};
};
export interface PayrollPayrollHistory{
"title":string;
"timeFilter":{
"placeholder":string;
"options":{
"3months":string;
"6months":string;
"year":string;
};
};
"dataView":{
"label":string;
};
"columns":{
"payPeriod":string;
"type":string;
"payDate":string;
"status":string;
"amount":string;
};
"menu":{
"viewSummary":string;
"viewReceipt":string;
"cancelPayroll":string;
};
"emptyState":{
"title":string;
"description":string;
};
"labels":{
"noAmount":string;
};
};
export interface PayrollPayrollList{
"payrollsListLabel":string;
"runPayrollTitle":string;
"status":{
"processed":string;
"unprocessed":string;
};
"type":{
"External":string;
"Off-Cycle":string;
"Regular":string;
};
"tableHeaders":{
"0":string;
"1":string;
"2":string;
"3":string;
"4":string;
};
};
export interface PayrollPayrollOverview{
"pageTitle":string;
"pageSubtitle":string;
"submitCta":string;
"editCta":string;
"alerts":{
"payrollNotCalculated":string;
"progressSaved":string;
"directDepositDeadline":string;
};
"payrollSummaryTitle":string;
"payrollSummaryLabel":string;
"dataViews":{
"label":string;
"companyPaysTab":string;
"companyPaysTable":string;
"hoursWorkedTab":string;
"hoursWorkedTable":string;
"employeeTakeHomeTab":string;
"employeeTakeHomeTable":string;
"taxesTab":string;
"taxesTable":string;
"debitedTable":string;
};
"tableHeaders":{
"totalPayroll":string;
"debitAmount":string;
"employees":string;
"grossPay":string;
"reimbursements":string;
"debitAccount":string;
"debitDate":string;
"employeesPayDate":string;
"companyTaxes":string;
"companyBenefits":string;
"companyPays":string;
"compensationType":string;
"regular":string;
"overtime":string;
"doubleOT":string;
"timeOff":string;
"totalHours":string;
"paymentType":string;
"employeeTaxes":string;
"employeeBenefits":string;
"payment":string;
"deductions":string;
"taxDescription":string;
"byYourEmployees":string;
"byYourCompany":string;
"debitedByGusto":string;
"taxesTotal":string;
};
"totalsLabel":string;
"directDepositLabel":string;
"reimbursementLabel":string;
"garnishmentsLabel":string;
"taxesLabel":string;
"compensationTypeLabels":{
"exempt":string;
"nonexempt":string;
};
};
export interface PayrollPayrollSchedule{
"pageTitle":string;
"helpOne":string;
"helpTwo":string;
"helpThree":string;
"payFrequency":string;
"payFrequency.weekly":string;
"payFrequency.biweekly":string;
"payFrequency.semimonthly":string;
"payFrequency.semimonthly_custom":string;
"payFrequency.monthly":string;
"day_1.label":string;
"day_2.label":string;
"anchor_pay_date.label":string;
"deadline_to_run_payroll.label":string;
"anchor_end_of_pay_period.label":string;
"anchor_end_of_pay_period.help":string;
};
export interface PayrollRunPayroll{
"alerts":{
"employeeUpdated":{
"label":string;
};
};
};
export interface common{
"status":{
"loading":string;
"requiredField":string;
"errorEncountered":string;
};
"optionalLabel":string;
"progressBarLabel":string;
"errors":{
"errorHeading":string;
"globalReactError":string;
"resetGlobalError":string;
"unknownError":string;
"missingParamsOrContext":string;
"unhandledEvent":string;
"unknownEventType":string;
"ensureRequired":string;
};
"icons":{
"selectArrow":string;
"calendarArrow":string;
"nextMonth":string;
"previousMonth":string;
"magnifyingGlass":string;
"paginationFirst":string;
"paginationPrev":string;
"paginationNext":string;
"paginationLast":string;
};
"labels":{
"paginationControllCountLabel":string;
"paginationFetchingLabel":string;
"openMenu":string;
"menuLabel":string;
};
"onboardingStatus":{
"contractor":{
"undefined":string;
"admin_onboarding_incomplete":string;
"admin_onboarding_review":string;
"onboarding_completed":string;
"self_onboarding_not_invited":string;
"self_onboarding_invited":string;
"self_onboarding_started":string;
"self_onboarding_review":string;
};
"employee":{
"undefined":string;
"admin_onboarding_incomplete":string;
"onboarding_completed":string;
"self_onboarding_pending_invite":string;
"self_onboarding_invited":string;
"self_onboarding_invited_started":string;
"self_onboarding_invited_overdue":string;
"self_onboarding_completed_by_employee":string;
"self_onboarding_awaiting_admin_review":string;
};
};
"inputs":{
"ssn":{
"placeholder":string;
};
"ein":{
"placeholder":string;
};
"workersCompensationRatePerHourAdornment":string;
};
"payRateFormats":{
"hourly":string;
"weekly":string;
"monthly":string;
"yearly":string;
"paycheck":string;
};
"validations":{
"accountName":string;
"routingNumber":string;
"accountNumber":string;
"ssn":string;
"location":string;
"dob":string;
};
"statesHash":{
"AL":string;
"AK":string;
"AZ":string;
"AR":string;
"CA":string;
"CO":string;
"CT":string;
"DE":string;
"FL":string;
"GA":string;
"HI":string;
"ID":string;
"IL":string;
"IN":string;
"IA":string;
"KS":string;
"KY":string;
"LA":string;
"ME":string;
"MD":string;
"MA":string;
"MI":string;
"MN":string;
"MS":string;
"MO":string;
"MT":string;
"NE":string;
"NV":string;
"NH":string;
"NJ":string;
"NM":string;
"NY":string;
"NC":string;
"ND":string;
"OH":string;
"OK":string;
"OR":string;
"PA":string;
"RI":string;
"SC":string;
"SD":string;
"TN":string;
"TX":string;
"UT":string;
"VT":string;
"VA":string;
"WA":string;
"WV":string;
"WI":string;
"WY":string;
};
"table":{
"selectRowHeader":string;
"selectRowLabel":string;
"actionsColumnHeader":string;
};
"card":{
"selectRowLabel":string;
};
"signatoryTitles":{
"owner":string;
"president":string;
"vice_president":string;
"treasurer":string;
"corporate_officer":string;
"partner":string;
"member":string;
};
"reorderableList":{
"itemMovedDown":string;
"itemMovedUp":string;
"dragStarted":string;
"dragEnded":string;
"movedUp":string;
"movedDown":string;
"reorderingCanceled":string;
"reorderingExited":string;
"reorderingStarted":string;
"reorderingComplete":string;
"draggableLabel":string;
"draggableLabelActive":string;
"draggablePosition":string;
"item":string;
"dropItemHere":string;
"draggableItem":string;
};
};

    interface CustomTypeOptions {
        defaultNS: 'common';
        resources: { 'Company.AddBank': CompanyAddBank, 'Company.Addresses': CompanyAddresses, 'Company.AssignSignatory': CompanyAssignSignatory, 'Company.BankAccount': CompanyBankAccount, 'Company.DocumentList': CompanyDocumentList, 'Company.FederalTaxes': CompanyFederalTaxes, 'Company.Industry': CompanyIndustry, 'Company.Locations': CompanyLocations, 'Company.OnboardingOverview': CompanyOnboardingOverview, 'Company.PaySchedule': CompanyPaySchedule, 'Company.SignatureForm': CompanySignatureForm, 'Company.StateTaxes': CompanyStateTaxes, 'Contractor.Address': ContractorAddress, 'Contractor.ContractorList': ContractorContractorList, 'Contractor.NewHireReport': ContractorNewHireReport, 'Contractor.PaymentMethod': ContractorPaymentMethod, 'Contractor.Profile': ContractorProfile, 'Contractor.Submit': ContractorSubmit, 'Employee.BankAccount': EmployeeBankAccount, 'Employee.Compensation': EmployeeCompensation, 'Employee.Deductions': EmployeeDeductions, 'Employee.DocumentSigner': EmployeeDocumentSigner, 'Employee.EmployeeList': EmployeeEmployeeList, 'Employee.FederalTaxes': EmployeeFederalTaxes, 'Employee.HomeAddress': EmployeeHomeAddress, 'Employee.Landing': EmployeeLanding, 'Employee.OnboardingSummary': EmployeeOnboardingSummary, 'Employee.PaySchedules': EmployeePaySchedules, 'Employee.PaymentMethod': EmployeePaymentMethod, 'Employee.Profile': EmployeeProfile, 'Employee.SplitPaycheck': EmployeeSplitPaycheck, 'Employee.StateTaxes': EmployeeStateTaxes, 'Employee.Taxes': EmployeeTaxes, 'Payroll.PayrollConfiguration': PayrollPayrollConfiguration, 'Payroll.PayrollEditEmployee': PayrollPayrollEditEmployee, 'Payroll.PayrollHistory': PayrollPayrollHistory, 'Payroll.PayrollList': PayrollPayrollList, 'Payroll.PayrollOverview': PayrollPayrollOverview, 'Payroll.PayrollSchedule': PayrollPayrollSchedule, 'Payroll.RunPayroll': PayrollRunPayroll, 'common': common,  }
    };
}