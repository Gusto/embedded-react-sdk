@use '@/styles/Helpers' as *;

.root {
  width: 100%;

  :global(.react-aria-ComboBox-root) {
    color: var(--g-typography-text-color);
    width: 100%;
    box-shadow: var(--g-shadow-100);

    &[data-invalid] {
      :global(.react-aria-Button) {
        border-color: var(--g-colors-error-500);
      }
    }

    &:focus-within {
      @include formFocusOutline($offset: calc(var(--g-input-borderWidth) * -1));
      border-radius: var(--g-radius);
      &[data-invalid] {
        @include formFocusError($offset: calc(var(--g-input-borderWidth) * -1));
      }
    }

    :global(.react-aria-Input) {
      width: 100%;
      height: var(--g-input-height);
      padding: var(--g-input-paddingY) 0;
      margin: 0;
      border: none;
      background-color: transparent;
      font-size: var(--g-input-fontSize);
      color: var(--g-input-textColor);
      line-height: toRem(24);
      outline: 0;

      &[data-focused] {
        border: none;
        outline: 0;
      }
    }

    :global(.react-aria-Button) {
      border: var(--g-input-borderWidth) solid var(--g-input-borderColor);
      border-radius: var(--g-input-radius);
      font-size: var(--g-input-fontSize);
      height: var(--g-input-height);
      padding: var(--g-input-paddingY) var(--g-input-paddingX);
      display: flex;
      justify-content: space-between;
      width: 100%;
      align-items: center;
      background: var(--g-input-background);
      color: var(--g-input-textColor);
      font-weight: 400;
      line-height: toRem(24);

      &[data-focus-visible] {
        @include formFocusOutline;
      }

      &[data-disabled='true'] {
        background-color: var(--g-input-disabled-bg);
      }
    }
  }
}

.icons {
  margin-left: var(--g-spacing-20);
  background: transparent;
  color: var(--g-colors-gray-700);
  forced-color-adjust: none;
  line-height: 0;
  display: flex;
  align-items: center;
  gap: var(--g-spacing-4);
}

.popover {
  width: 100%;
  :global(.react-aria-Popover[data-trigger='ComboBox']) {
    min-width: toRem(300);
    max-height: toRem(500);
  }

  :global(.react-aria-ListBox) {
    display: block;
    width: 100%;
    max-height: inherit;
    min-height: unset;
    overflow: auto;
    outline: none;
    padding: 8px;

    &[data-focus-visible] {
      @include formFocusOutline;
    }
  }
  :global(.react-aria-Header) {
    padding-left: 1.571rem;
  }

  :global(.react-aria-ListBoxItem) {
    padding: toRem(6) toRem(12) toRem(6) toRem(12);
    position: relative;
    font-size: toRem(14);
    cursor: pointer;
    outline: none;
    box-sizing: border-box;
    border-radius: 6px;

    &[data-hovered] {
      background: var(--g-colors-gray-300);
    }

    &[data-focus-visible] {
      @include formFocusOutline;
      outline-offset: 0px;
    }

    &[data-selected] {
      background: var(--g-colors-gray-400);

      &[data-focus-visible] {
        outline-offset: -4px;
        outline-color: var(--g-colors-gray-100);
      }
    }
  }
}
