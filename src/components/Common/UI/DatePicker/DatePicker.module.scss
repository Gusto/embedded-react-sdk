.container {
  width: 100%;
}

.root {
  :global(.react-aria-DateField) {
    color: var(--g-inputContentColor);
    width: 100%;
  }

  :global(.react-aria-DateInput) {
    display: flex;
    font-size: var(--g-fontSizeSmall);
    padding: toRem(8) toRem(12);
    height: toRem(40);
    width: 100%;
    white-space: nowrap;
    forced-color-adjust: none;
  }

  :global(.react-aria-DateInput:not(.react-aria-DatePicker *)) {
    border: var(--g-inputBorderWidth) solid var(--g-inputBorderColor);
    border-radius: var(--g-inputRadius);

    &[data-focus-within] {
      outline: var(--g-focusRingWidth) solid var(--g-focusRingColor);
      outline-offset: calc(var(--g-inputBorderWidth) * -1);
    }
  }

  :global(.react-aria-DateSegment) {
    padding: 0 2px;
    font-variant-numeric: tabular-nums;
    text-align: end;
    color: var(--g-inputContentColor);
    border-radius: 4px;

    &[data-type='literal'] {
      padding: 0;
    }

    &[data-placeholder] {
      color: var(--g-inputPlaceholderColor);
      font-style: italic;
    }

    &[data-hovered] {
      color: var(--g-colorPrimary);
      background-color: var(--g-colorSecondaryAccent);
    }

    &[data-invalid] {
      &:focus {
        background: var(--g-colorErrorAccent);
        color: var(--g-colorErrorContent);
      }
    }

    &:focus {
      color: var(--g-colorPrimaryContent);
      background: var(--g-colorPrimary);
      outline: none;
      caret-color: transparent;
    }
  }

  :global(.react-aria-DatePicker) {
    color: var(--g-colorBodyContent);
    width: 100%;

    :global(.react-aria-Group) {
      display: flex;
      width: 100%;
      align-items: center;
      border: var(--g-inputBorderWidth) solid var(--g-inputBorderColor);
      border-radius: var(--g-inputRadius);
      box-shadow: var(--g-shadowResting);
      background-color: var(--g-inputBackgroundColor);

      &[data-focus-within] {
        outline: var(--g-focusRingWidth) solid var(--g-focusRingColor);
        outline-offset: calc(var(--g-inputBorderWidth) * -1);

        &[data-invalid] {
          outline: var(--g-focusRingWidth) solid var(--g-colorErrorAccent);
          outline-offset: calc(var(--g-inputBorderWidth) * -1);
        }
      }

      &[data-invalid] {
        border-color: var(--g-colorErrorAccent);
      }

      &[data-disabled='true'] {
        background-color: var(--g-inputDisabledBackgroundColor);
        opacity: 0.5;
      }
    }

    &[data-open] {
      :global(.react-aria-Group) {
        outline: var(--g-focusRingWidth) solid var(--g-focusRingColor);
        outline-offset: calc(var(--g-inputBorderWidth) * -1);
      }
    }

    :global(.react-aria-Button) {
      background: transparent;
      padding: 0;
      color: var(--g-inputAdornmentColor);
      forced-color-adjust: none;
      line-height: 0;
      border: none;

      &[data-focus-visible] {
        outline: var(--g-focusRingWidth) solid var(--g-focusRingColor);
        outline-offset: 2px;
      }
    }
  }
}

.popover {
  :global(.react-aria-Popover[data-trigger='DatePicker']) {
    max-width: unset;
  }

  :global(.calendar-selection-control) {
    margin-bottom: toRem(16);
  }

  :global(.calendar-wrapper) {
    border: toRem(1) solid var(--g-colorSecondaryAccent);
    border-radius: toRem(4);
  }

  :global(.calendar-header) {
    padding: 1rem;
    border-bottom: toRem(1) solid var(--g-colorSecondaryAccent);
  }

  :global(table.react-aria-CalendarGrid) {
    margin: 0 toRem(8) toRem(8) toRem(8);
    border-collapse: collapse;
    border-spacing: 0;
    width: toRem(286);

    tr {
      :global(th.react-aria-CalendarHeaderCell) {
        text-transform: uppercase;
      }

      :global(td div.react-aria-CalendarCell) {
        width: 100%;
        height: 100%;
        display: flex;
        justify-content: center;
        align-items: center;
      }

      :global(.date-marker) {
        position: relative;
        display: inline-block;
      }

      :global(.date-marker::after) {
        content: '';
        position: absolute;
        left: 50%;
        bottom: toRem(3);
        background-color: var(--g-colorPrimaryContent);
        border-radius: 50%;
        transform: translateX(-50%);
      }

      td {
        height: toRem(44);
        padding: toRem(2) 0;
      }
    }
  }

  :global(.react-aria-Heading) {
    flex: 1;
    margin: 0;
    text-align: center;
    font-size: var(--g-fontSizeSmall);
  }

  // Calendar and Range Calendar commons tyles
  :global(.react-aria-Calendar) {
    width: fit-content;
    max-width: 100%;
    color: var(--g-colorBodyContent);
    font-weight: 400;
    font-size: var(--g-fontSizeSmall);
    overflow-x: hidden;

    header {
      display: flex;
      align-items: center;
      padding: 8px;

      button {
        color: var(--g-colorBodyContent) !important;
      }
    }
  }

  :global(.react-aria-Button) {
    width: 36px;
    height: 36px;
    padding: 0;
    border-radius: 999px;
    background-color: unset;
    border: none;

    &[data-focus-visible] {
      outline: var(--g-focusRingWidth) solid var(--g-focusRingColor);
      outline-offset: 2px;
    }

    &[data-hovered] {
      background-color: var(--g-colorSecondaryAccent);
    }
  }

  :global(.react-aria-CalendarGridHeader) {
    th {
      padding-bottom: 8px;
    }
  }

  :global(.react-aria-CalendarHeaderCell) {
    text-align: center;
    color: var(--g-colorSecondaryContent);
    font-weight: 400;
  }

  :global(.react-aria-CalendarCell) {
    width: toRem(32);
    line-height: toRem(32);
    text-align: center;
    border-radius: toRem(6);
    cursor: pointer;
    outline: none;
    margin: 1px;
    forced-color-adjust: none;

    &[data-outside-month] {
      display: none;
    }

    &[data-hovered] {
      background: var(--g-colorSecondaryAccent);
    }

    &[data-pressed] {
      background: var(--g-colorPrimary);
      color: var(--g-colorPrimaryContent);
    }

    &[data-focus-visible] {
      outline: var(--g-focusRingWidth) solid var(--g-focusRingColor);
      outline-offset: 2px;
    }

    &[data-selected] {
      background: var(--g-colorPrimary);
      color: var(--g-colorPrimaryContent);
    }

    &[data-disabled] {
      cursor: not-allowed;
      display: block;
      opacity: 0.5;
    }
  }

  :global(.react-aria-Dialog) {
    padding: 0 !important;
  }
}

.icons {
  margin-left: toRem(20);
  background: transparent;
  color: var(--g-colorSecondaryContent);
  forced-color-adjust: none;
  line-height: 0;
  display: flex;
  align-items: center;
  gap: toRem(4);
  margin-left: toRem(20);
  margin-right: toRem(12);
}
