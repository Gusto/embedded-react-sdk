// @use '@/styles/Helpers' as *;
.root:global(.react-aria-CustomSelect) {
  :global(.react-aria-Select) {
    color: var(--g-colorBodyContent);
    width: 100%;
    box-shadow: var(--g-shadowResting);

    &[data-open] {
      :global(.react-aria-Button) {
        outline: var(--g-focusRingWidth) solid var(--g-focusRingColor);
        outline-offset: calc(var(--g-inputBorderWidth) * -1);
      }

      &[data-invalid='true'] {
        :global(.react-aria-Button) {
          outline: var(--g-focusRingWidth) solid var(--g-colorErrorAccent);
          outline-offset: calc(var(--g-inputBorderWidth) * -1);
        }
      }
    }

    &[data-invalid='true'] {
      :global(.react-aria-Button) {
        border-color: var(--g-colorErrorAccent);
      }
    }

    .icons {
      margin-left: toRem(20);
      background: transparent;
      forced-color-adjust: none;
      line-height: 0;
      display: flex;
      align-items: center;
      gap: toRem(4);
    }
  }

  :global(.react-aria-Button) {
    border: var(--g-inputBorderWidth) solid var(--g-inputBorderColor);
    border-radius: var(--g-inputRadius);
    font-size: var(--g-fontSizeSmall);
    height: toRem(40);
    padding: toRem(8) toRem(12);
    display: flex;
    justify-content: space-between;
    width: 100%;
    align-items: center;
    background: var(--g-inputBackgroundColor);
    color: var(--g-inputContentColor);
    font-weight: 400;
    line-height: var(--g-fontLineHeight);

    &[data-focus-visible] {
      outline: var(--g-focusRingWidth) solid var(--g-focusRingColor);
      outline-offset: calc(var(--g-inputBorderWidth) * -1);
    }

    &[data-hovered],
    &[data-pressed] {
      background-color: var(--g-colorBody);
      color: var(--g-colorBodyContent);
    }

    &[data-disabled] {
      background-color: var(--g-inputDisabledBackgroundColor);
      opacity: 0.5;
    }

    svg {
      color: var(--g-inputAdornmentColor);
    }
  }

  :global(.react-aria-SelectValue) {
    width: 100%;
    text-align: start;
    text-wrap: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;

    &[data-placeholder] {
      color: var(--g-inputPlaceholderColor);
    }
  }
}

//TODO: reastyle once popever design is available
.popover {
  width: 100%;
  :global(.react-aria-Popover[data-trigger='Select']) {
    min-width: toRem(300);
    max-height: toRem(500);
  }

  :global(.react-aria-ListBox) {
    display: block;
    width: 100%;
    max-height: inherit;
    min-height: unset;
    overflow: auto;
    outline: none;
    padding: 8px;

    &[data-focus-visible] {
      outline: var(--g-focusRingWidth) solid var(--g-focusRingColor);
      outline-offset: 2px;
    }
  }

  :global(.react-aria-Header) {
    padding-left: 1.571rem;
  }

  :global(.react-aria-ListBoxItem) {
    padding: toRem(6) toRem(12) toRem(6) toRem(12);
    position: relative;
    font-size: toRem(14);
    cursor: pointer;
    outline: none;
    box-sizing: border-box;
    border-radius: toRem(6);

    &[data-hovered] {
      background: var(--g-colorBodyAccent);
    }

    &[data-focus-visible] {
      outline: var(--g-focusRingWidth) solid var(--g-focusRingColor);
      outline-offset: 0px;
    }

    &[data-selected] {
      background: var(--g-colorBodyHover);
      color: var(--g-colorBodyContent);

      &[data-focus-visible] {
        outline-offset: 4px;
        outline-color: var(--g-focusRingColor);
      }
    }
  }
}
