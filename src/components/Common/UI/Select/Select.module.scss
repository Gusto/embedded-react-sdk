// @use '@/styles/Helpers' as *;
.root {
  :global(.react-aria-Select) {
    color: var(--g-typography-text-color);
    width: 100%;

    &[data-open] {
      :global(.react-aria-Button) {
        @include formFocusOutline;
      }
    }

    &[data-invalid='true'] {
      :global(.react-aria-Button) {
        border-color: var(--g-colors-error-500);
        &[data-focus-visible] {
          @include formFocusError;
        }
      }
    }

    :where(span, div)[aria-hidden] {
      margin-left: var(--g-spacing-20);
      background: transparent;
      color: var(--g-colors-gray-700);
      forced-color-adjust: none;
      line-height: 0;
    }
  }

  :global(.input-text-stack) {
    @include inputTextStack;
  }

  :global(.react-aria-Button) {
    border: var(--g-input-borderWidth) solid var(--g-input-borderColor);
    border-radius: var(--g-radius);
    font-size: var(--g-input-fontSize);
    height: var(--g-input-height);
    padding: var(--g-input-paddingY) var(--g-input-paddingX);
    display: flex;
    justify-content: space-between;
    width: 100%;
    align-items: center;
    background: var(--g--input-background);
    color: var(--g--input-textColor);
    font-weight: 400;
    line-height: toRem(24);

    &[data-focus-visible] {
      @include formFocusOutline;
    }

    &[data-hovered],
    &[data-pressed] {
      background-color: var(--g-colors-gray-100);
      color: var(--g-colors-gray-1000);
    }
  }

  :global(.react-aria-SelectValue) {
    width: 100%;
    text-align: start;
    text-wrap: nowrap;
    text-overflow: ellipsis;
    overflow: hidden;

    &[data-placeholder] {
      color: var(--g-input-placeholderColor);
    }
  }

  :global(.react-aria-Text[slot='description']) {
    @include description;
  }

  :global(.react-aria-FieldError) {
    @include fieldError;
  }
}

//TODO: reastyle once popever design is available
.popover {
  width: 100%;
  :global(.react-aria-Popover[data-trigger='Select']) {
    min-width: toRem(300);
    max-height: toRem(500);
  }

  :global(.react-aria-ListBox) {
    display: block;
    width: 100%;
    max-height: inherit;
    min-height: unset;
    overflow: auto;
    outline: none;
    padding: 8px;

    &[data-focus-visible] {
      @include formFocusOutline;
    }
  }

  :global(.react-aria-Header) {
    padding-left: 1.571rem;
  }

  :global(.react-aria-ListBoxItem) {
    padding: toRem(6) toRem(12) toRem(6) toRem(12);
    position: relative;
    font-size: toRem(14);
    cursor: pointer;
    outline: none;
    box-sizing: border-box;
    border-radius: 6px;

    &[data-hovered] {
      background: var(--g-colors-gray-300);
    }

    &[data-focus-visible] {
      @include formFocusOutline;
      outline-offset: 0px;
    }

    &[data-selected] {
      background: var(--g-colors-gray-400);

      &[data-focus-visible] {
        outline-offset: -4px;
        outline-color: var(--g-colors-gray-100);
      }
    }
  }
}
