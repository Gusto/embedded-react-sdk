# üìö Documentation Publishing Workflow
#
# This workflow synchronizes the `docs/` directory with ReadMe.com for the React SDK documentation.
#
# üîÑ **How it works:**
# 1. **Validation**: Ensures docs are properly prepared before publishing
# 2. **Publishing**: Uploads documentation to ReadMe with proper IDs and metadata
#
# üéØ **When it runs:**
# - **Automatic (Dry-run)**: On pushes to main when docs/ files change
# - **Manual**: Via workflow_dispatch with option to do live publishing
# - **PR Testing**: On pull requests to validate docs AND test full publishing flow (dry-run)
#
# üõ°Ô∏è **Safety Features:**
# - Dry-run by default (safe simulation)
# - Full publishing flow tested in PRs before reaching main
# - Manual approval required for live publishing
# - Validates docs are properly synchronized before publishing
#
# üìã **Requirements:**
# - README_API_KEY secret must be configured
# - Docs must be prepared with `npm run docs:lockfile && npm run docs:frontmatter`

name: Sync `docs` directory to ReadMe

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - '.docs/**'
      - 'package.json'
  pull_request:
    branches:
      - main
    paths:
      - 'docs/**'
      - '.docs/**'
      - 'package.json'
  workflow_dispatch:
    inputs:
      dry_run:
        description: 'üîç Dry-run mode (simulate without publishing - RECOMMENDED)'
        required: false
        default: true
        type: boolean

# Prevent concurrent runs that could cause git conflicts
concurrency:
  group: docs-sync-${{ github.ref }}
  cancel-in-progress: false

jobs:
  validate-docs:
    runs-on: ubuntu-latest
    container: node:20-alpine
    name: Validate documentation is properly prepared

    steps:
      - name: Install git (required for checkout in Alpine)
        run: apk add --no-cache git

      - name: Checkout this repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Install dependencies
        run: npm ci

      - name: Check if docs are properly prepared (no changes should be needed)
        run: |
          # Test run the docs scripts to see if they would make changes
          npm run docs:lockfile
          npm run docs:frontmatter

          # Check only docs and frontmatter changes, exclude lockfile  
          if [ -n "$(git status --porcelain | grep -E '^.M (docs/|\.docs/src/)')" ]; then
            echo "‚ùå Documentation is not properly prepared!"
            echo ""
            echo "The following files have changes after running docs processing:"
            git status --porcelain | grep -E '^.M (docs/|\.docs/src/)'
            echo ""
            echo "Please run the following commands locally and commit the changes:"
            echo "  npm run docs:lockfile"
            echo "  npm run docs:frontmatter"
            echo ""
            echo "This ensures documentation is properly synchronized before publishing."
            exit 1
          else
            echo "‚úÖ Documentation is properly prepared - no changes needed"
          fi
        env:
          README_API_KEY: ${{ secrets.README_API_KEY }}

  publish:
    runs-on: ubuntu-latest
    container: node:20-alpine
    name: Prepare and publish docs to ReadMe
    needs: validate-docs
    # Run on main branch pushes/manual triggers, AND on PRs for full flow testing
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'

    # Add explicit permissions for publishing
    permissions:
      contents: read
      actions: read

    steps:
      - name: Install git (required for checkout in Alpine)
        run: apk add --no-cache git

      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Install dependencies
        run: npm ci

      - name: Prepare documentation for publishing
        run: |
          # Generate fresh lockfile and frontmatter (should be no-op if validation passed)
          npm run docs:lockfile
          npm run docs:frontmatter

          # Setup temp folder with parentDoc & category IDs for ReadMe upload
          npm run docs:prepare-publish
        env:
          README_API_KEY: ${{ secrets.README_API_KEY }}

      - name: Upload to ReadMe (Dry Run)
        # Always dry-run for PRs, dry-run by default for main pushes, live only on manual trigger
        if: github.event_name == 'pull_request' || github.event_name == 'push' || (github.event_name == 'workflow_dispatch' && inputs.dry_run)
        uses: readmeio/rdme@v10
        with:
          rdme: docs .docs/temp-publish-docs --key=$README_API_KEY --version=2.0 --dryRun
        env:
          README_API_KEY: ${{ secrets.README_API_KEY }}

      - name: üöÄ Upload to ReadMe (Live Publishing)
        # Only live publish on manual workflow dispatch from main with dry_run = false
        if: github.ref == 'refs/heads/main' && github.event_name == 'workflow_dispatch' && !inputs.dry_run
        uses: readmeio/rdme@v10
        with:
          rdme: docs .docs/temp-publish-docs --key=$README_API_KEY --version=2.0
        env:
          README_API_KEY: ${{ secrets.README_API_KEY }}

      - name: Clean up temp publish directory
        if: always()
        run: |
          npm run docs:clean-publish || true
