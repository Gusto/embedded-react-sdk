# 📚 Documentation Publishing Workflow
#
# This workflow validates and publishes documentation for the React SDK documentation.
#
# 🔄 **How it works:**
# 1. **Validation**: Ensures docs are properly prepared and formatted
# 2. **Testing**: Validates documentation structure without making any changes
# 3. **Publishing**: (Manual only) Uploads documentation to ReadMe when manually triggered
#
# 🎯 **When it runs:**
# - **PR Reviews**: On pull requests - SAFE validation only (no actual publishing)
# - **Main Branch**: On pushes to main when docs/ files change - SAFE validation only
# - **Manual Publishing**: Via workflow_dispatch with option to do live publishing
#
# 🛡️ **Safety Features:**
# - 🧪 PRs only run safe validation - NO actual publishing ever happens
# - 🧪 Main branch pushes only run safe validation by default
# - 🚀 Live publishing requires manual workflow trigger from main branch
# - ✅ Full publishing flow validated before any live publishing
#
# 📋 **Requirements:**
# - README_API_KEY secret must be configured
# - Docs must be prepared with `npm run docs:lockfile && npm run docs:frontmatter`

name: Documentation

on:
  push:
    branches:
      - main
    paths:
      - 'docs/**'
      - '.docs/**'
      - 'package.json'
  pull_request:
    branches:
      - main
    paths:
      - 'docs/**'
      - '.docs/**'
      - 'package.json'
  workflow_dispatch:
    inputs:
      dry_run:
        description: '🔍 Dry-run mode (simulate without publishing - RECOMMENDED)'
        required: false
        default: true
        type: boolean

# Prevent concurrent runs that could cause git conflicts
concurrency:
  group: docs-sync-${{ github.ref }}
  cancel-in-progress: false

jobs:
  validate-docs:
    runs-on: ubuntu-latest
    container: node:20-alpine
    name: Validate Documentation

    steps:
      - name: Install git (required for checkout in Alpine)
        run: apk add --no-cache git

      - name: Checkout this repo
        uses: actions/checkout@v4
        with:
          fetch-depth: 2

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Check if docs are properly prepared (no changes should be needed)
        run: |
          # Test run the docs scripts to see if they would make changes
          npm run docs:sync

          # Check only docs and frontmatter changes, exclude lockfile  
          if [ -n "$(git status --porcelain | grep -E '^.M (docs/|\.docs/src/)')" ]; then
            echo "❌ Documentation is not properly prepared!"
            echo ""
            echo "The following files have changes after running docs processing:"
            git status --porcelain | grep -E '^.M (docs/|\.docs/src/)'
            echo ""
            echo "Please run the following command locally and commit the changes:"
            echo "  npm run docs:sync"
            echo ""
            echo "This ensures documentation is properly synchronized before publishing."
            exit 1
          else
            echo "✅ Documentation is properly prepared - no changes needed"
          fi
        env:
          README_API_KEY: ${{ secrets.README_API_KEY }}

  test-docs-formatting:
    runs-on: ubuntu-latest
    container: node:20-alpine
    name: Validate w/RDME
    needs: validate-docs
    # Run on main branch pushes/manual triggers, AND on PRs for full flow testing
    if: github.ref == 'refs/heads/main' || github.event_name == 'pull_request'

    # Add explicit permissions for publishing
    permissions:
      contents: read
      actions: read

    steps:
      - name: Install git (required for checkout in Alpine)
        run: apk add --no-cache git

      - name: Checkout this repo
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Prepare documentation for publishing
        run: |
          # Generate fresh lockfile and frontmatter (should be no-op if validation passed)
          npm run docs:sync

          # Setup temp folder with parentDoc & category IDs for ReadMe upload
          npm run docs

      - name: Test documentation publishing (dry-run)
        run: |
          echo "🧪 Testing documentation publishing (dry-run)..."
          npm run docs:publish -- --dry-run
        env:
          README_API_KEY: ${{ secrets.README_API_KEY }}
