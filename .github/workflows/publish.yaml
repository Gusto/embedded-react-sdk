name: Publish to NPM
on: workflow_dispatch
jobs:
  publish:
    runs-on:
      group: gusto-ubuntu-default
    permissions:
      contents: write
      id-token: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version-file: '.nvmrc'
          registry-url: 'https://registry.npmjs.org'
      - run: npm ci
      - run: npm run build
      - run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_TOKEN }}

      # 📚 Publish documentation to ReadMe after successful npm publish
      - name: Publish documentation to ReadMe
        run: |
          echo "📚 Publishing documentation to ReadMe..."
          npm run docs:publish
        env:
          README_API_KEY: ${{ secrets.README_API_KEY }}

      # 🔄 Sync back any changes from ReadMe (like new page IDs) and commit
      - name: Sync documentation changes from ReadMe
        run: |
          echo "🔄 Syncing documentation changes from ReadMe..."

          # Wait a moment for ReadMe to finish processing
          sleep 2

          # Configure git for automated commits
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

          # Sync any changes from ReadMe back to lockfile
          npm run docs:sync

          # Check if there are any changes to commit
          if ! git diff --quiet HEAD -- .docs/docs-lock.yml docs/; then
            echo "📝 Changes detected, committing updates..."
            git add .docs/docs-lock.yml docs/
            git commit -m "docs: sync after readme publish [skip ci]" -m "Auto-sync documentation metadata after publishing to readme." -m "This updates page IDs and other metadata returned from the readme API."
            echo "✅ Documentation sync committed"
            
            echo "🚀 Creating pull request with changes..."
            
            # Create a unique branch name
            BRANCH_NAME="docs/sync-after-publish-$(date +%Y%m%d-%H%M%S)"
            
            # Create and switch to new branch
            git checkout -b "$BRANCH_NAME"
            
            # Push the branch
            git push origin "$BRANCH_NAME"
            
            # Create a pull request using GitHub CLI
            gh pr create \
              --title "docs: sync after readme publish" \
              --body "Auto-sync documentation metadata after publishing to ReadMe. This updates page IDs and other metadata returned from the ReadMe API." \
              --head "$BRANCH_NAME" \
              --base main
            
            echo "✅ Pull request created for documentation sync"
          else
            echo "✅ No changes to sync"
          fi
        env:
          README_API_KEY: ${{ secrets.README_API_KEY }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
